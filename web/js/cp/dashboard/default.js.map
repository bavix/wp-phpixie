{"version":3,"sources":["default.jsx"],"names":["IBoxBlock","props","data","title","id","React","Component","initChart","stringId","block","Chart","document","getElementById","getContext","type","labels","datasets","backgroundColor","$","dataStorage","blocks","brand","dealer","heading","invite","wheel","style","boltPattern","collection","user","app","model","fetch","method","credentials","then","r","json","res","active","count","render","content","ReactDOM"],"mappings":"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","file":"default.js","sourcesContent":["class IBoxBlock extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <div className=\"col-sm-6 col-xs-4 col-md-4 col-lg-3\">\n            <div className=\"ibox-title\">\n                <h5>{ this.props.data.title }</h5>\n            </div>\n            <div className=\"ibox-content\">\n                <canvas id={\"chart-\" + this.props.data.id} width=\"100%\"> Loading ...</canvas>\n            </div>\n        </div>\n    }\n\n}\n\nfunction initChart(stringId, data, block) {\n    new Chart(document.getElementById(\"chart-\" + stringId).getContext('2d'), {\n        type: 'pie',\n        data: {\n            labels: [\"Active\", \"No Active\"],\n            datasets: [{\n                backgroundColor: block.backgroundColor,\n                data: data\n            }]\n        }\n    });\n}\n\n$(function () {\n\n    let dataStorage = [];\n    let blocks = {\n        brand: {\n            id: 'brand',\n            title: 'Brand',\n            backgroundColor: ['#e74c3c']\n        },\n\n        dealer: {\n            id: 'dealer',\n            title: 'Dealer',\n            backgroundColor: ['#4BC0C0']\n        },\n\n        heading: {\n            id: 'heading',\n            title: 'Heading',\n            backgroundColor: ['#36A2EB']\n        },\n\n        invite: {\n            id: 'invite',\n            title: 'Invite',\n            backgroundColor: ['#c2c4d1']\n        },\n\n        wheel: {\n            id: 'wheel',\n            title: 'Wheel',\n            backgroundColor: ['#ffe6ab']\n        },\n\n        style: {\n            id: 'style',\n            title: 'Style [Wheels]',\n            backgroundColor: ['#36A2EB']\n        },\n\n        boltPattern: {\n            id: 'boltPattern',\n            title: 'Bolt Pattern [Wheels]',\n            backgroundColor: ['#c2c4d1']\n        },\n\n        collection: {\n            id: 'collection',\n            title: 'Collection [Wheels]',\n            backgroundColor: ['#4BC0C0']\n        },\n\n        user: {\n            id: 'user',\n            title: 'User',\n            backgroundColor: ['#ffe6ab']\n        },\n\n        app: {\n            id: 'app',\n            title: 'Application',\n            backgroundColor: ['#FF6384']\n        }\n    };\n\n    for (let model in blocks) {\n        fetch('/cp/dashboard/count?model=' + model, {\n            method: 'GET',\n            credentials: 'include'\n        }).then(r => r.json()).then(res => {\n            dataStorage[blocks[model].id] = [res.active, res.count - res.active];\n            render(blocks[model].id);\n        });\n    }\n\n    function render(type) {\n        let content = document.getElementById('content');\n\n        ReactDOM.render(\n            <div className=\"col-lg-12\">\n                <IBoxBlock data={ blocks.brand }/>\n                <IBoxBlock data={ blocks.dealer }/>\n                <IBoxBlock data={ blocks.heading }/>\n                <IBoxBlock data={ blocks.invite }/>\n\n                <IBoxBlock data={ blocks.wheel }/>\n                <IBoxBlock data={ blocks.style }/>\n                <IBoxBlock data={ blocks.boltPattern }/>\n                <IBoxBlock data={ blocks.collection }/>\n\n                <IBoxBlock data={ blocks.user }/>\n                <IBoxBlock data={ blocks.app }/>\n            </div>,\n            content\n        );\n\n        initChart(type, dataStorage[type], blocks[type]);\n    }\n\n});"]}