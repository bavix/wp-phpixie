{"version":3,"sources":["edit.jsx"],"names":["response","status","json","error","Error","statusText","VideoRows","props","state","data","rows","model","id","url","description","image","overflow","title","map","row","React","Component","$","submit","event","preventDefault","$self","form","FormData","fetch","attr","method","credentials","body","then","alert","catch","$message","find","length","prepend","addClass","text","error_description","select2","theme","socialRows","document","getElementById","$formVideo","videoJson","tableInit","push","ReactDOM","render","videoRows","lightGallery","video","undefined"],"mappings":"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","file":"edit.js","sourcesContent":["function response(response) {\n    if (response.status === 201 || response.status === 200) {\n        return response.json();\n    }\n\n    if (response.status !== 204) {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n    }\n\n    return [];\n}\n\nclass VideoRows extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: props.rows\n        };\n    }\n\n    row(model) {\n        return <li key={model.id} className=\"col-xs-6 col-sm-4 col-md-3 video\"\n                data-src={model.url}\n                data-sub-html={\"<h4>\" + model.description + \"</h4>\"}>\n            <a>\n                <img className=\"img-responsive\" src={model.image}/>\n                <div className=\"gallery-list-poster\">\n                    {/*<img src=\"https://sachinchoolur.github.io/lightGallery/static/img/play-button.png\"/>*/}\n                    <img src=\"/node_modules/lightgallery/dist/img/video-play.png\"/>\n                </div>\n            </a>\n\n            <div className=\"caption\">\n                <h4 style={ {\n                    overflow:\"hidden\"\n                    , \"white-space\":\"nowrap\",\n                    \"text-overflow\": \"ellipsis\"\n                        , \"width\":\"200px\"\n                    } }> {model.title}</h4>\n                <a className=\"btn btn-danger btn-sm pull-right\">\n                    <i className=\"fa fa-trash\"> </i> trash\n                </a>\n            </div>\n        </li>\n    }\n\n    render() {\n\n        const rows = this.props.rows.map(this.row);\n\n        return <ul id=\"videoGallery\" className=\"lightGallery\" >\n            { rows }\n        </ul>;\n    }\n}\n\n$(function () {\n\n    $('[data-updated=\"wheel\"]').submit(function (event) {\n\n        event.preventDefault();\n\n        let $self = $(this);\n        let form = new FormData(this);\n\n        fetch($self.attr('action'), {\n            method: $self.attr('method'),\n            credentials: 'include',\n            body: form\n        }).then(function (response) {\n            if (response.status === 201 || response.status === 200) {\n                return response.json();\n            }\n\n            let error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }).then(function (json) {\n\n            // fixme\n            alert('Информация обновлена!');\n\n        }).catch(function (error) {\n            let $message = $self.find('.alert');\n\n            if (!$message.length) {\n                $self.find('div:first-child').prepend('<div class=\"alert\"></div>');\n                $message = $self.find('.alert');\n            }\n\n            error.response.json().then((json) => $message.addClass('alert-danger').text(json.error_description));\n        });\n\n    });\n\n    // fixme\n    $('#styleWheel').select2({\n        theme: \"bootstrap\"\n    });\n\n    // video\n\n    const socialRows = document.getElementById('videoRows');\n    let $formVideo = $('[data-created=\"video\"]');\n\n    let videoJson = [];\n\n    function tableInit(json) {\n        if (typeof json.id === \"undefined\") {\n            videoJson = json.data;\n        }\n        else {\n            videoJson.push(json)\n        }\n\n        ReactDOM.render(\n            <VideoRows rows={videoJson}/>,\n            videoRows\n        );\n\n        // plyr.setup();\n        $('#videoGallery').lightGallery({\n            video: true\n        });\n\n    }\n\n    // init data\n    fetch($formVideo.attr('action') + '?terms[provider]=YouTube', {\n        method: 'GET',\n        credentials: 'include'\n    }).then(response).then(tableInit).catch(() => undefined);\n\n    // send form\n    $formVideo.submit(function (event) {\n\n        event.preventDefault();\n\n        let form = new FormData(this);\n\n        fetch($formVideo.attr('action'), {\n            method: $formVideo.attr('method'),\n            credentials: 'include',\n            body: form\n        }).then(response).then(tableInit).catch(() => undefined);\n\n    });\n\n});"]}