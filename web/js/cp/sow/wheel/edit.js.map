{"version":3,"sources":["edit.jsx"],"names":["response","status","json","error","Error","statusText","VideoRows","props","state","data","rows","model","provider","String","toLowerCase","id","identifier","map","row","React","Component","$","submit","event","preventDefault","$self","form","FormData","fetch","attr","method","credentials","body","then","alert","catch","$message","find","length","prepend","addClass","text","error_description","select2","theme","socialRows","document","getElementById","$formVideo","videoJson","tableInit","push","ReactDOM","render","videoRows","plyr","setup","undefined"],"mappings":"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","file":"edit.js","sourcesContent":["function response(response) {\n    if (response.status === 201 || response.status === 200) {\n        return response.json();\n    }\n\n    if (response.status !== 204) {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n    }\n\n    return [];\n}\n\nclass VideoRows extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: props.rows\n        };\n    }\n\n    row(model) {\n        let provider = String(model.provider).toLowerCase();\n\n        return <div key={model.id} className=\"col-md-6\">\n            <div data-type={provider} data-video-id={model.identifier}></div>\n        </div>;\n    }\n\n    render() {\n\n        const rows = this.props.rows.map(this.row);\n\n        return <div className=\"col-xs-12\">\n            { rows }\n        </div>;\n    }\n}\n\n$(function () {\n\n    $('[data-updated=\"wheel\"]').submit(function (event) {\n\n        event.preventDefault();\n\n        let $self = $(this);\n        let form = new FormData(this);\n\n        fetch($self.attr('action'), {\n            method: $self.attr('method'),\n            credentials: 'include',\n            body: form\n        }).then(function (response) {\n            if (response.status === 201 || response.status === 200) {\n                return response.json();\n            }\n\n            let error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }).then(function (json) {\n\n            // fixme\n            alert('Информация обновлена!');\n\n        }).catch(function (error) {\n            let $message = $self.find('.alert');\n\n            if (!$message.length) {\n                $self.find('div:first-child').prepend('<div class=\"alert\"></div>');\n                $message = $self.find('.alert');\n            }\n\n            error.response.json().then((json) => $message.addClass('alert-danger').text(json.error_description));\n        });\n\n    });\n\n    // fixme\n    $('#styleWheel').select2({\n        theme: \"bootstrap\"\n    });\n\n    // video\n\n    const socialRows = document.getElementById('videoRows');\n    let $formVideo = $('[data-created=\"video\"]');\n\n    let videoJson = [];\n\n    function tableInit(json) {\n        if (typeof json.id === \"undefined\") {\n            videoJson = json.data;\n        }\n        else {\n            videoJson.push(json)\n        }\n\n        ReactDOM.render(\n            <VideoRows rows={videoJson}/>,\n            videoRows\n        );\n\n        plyr.setup();\n\n    }\n\n    // init data\n    fetch($formVideo.attr('action') + '?terms[provider]=YouTube', {\n        method: 'GET',\n        credentials: 'include'\n    }).then(response).then(tableInit).catch(() => undefined);\n\n    // send form\n    $formVideo.submit(function (event) {\n\n        event.preventDefault();\n\n        let form = new FormData(this);\n\n        fetch($formVideo.attr('action'), {\n            method: $formVideo.attr('method'),\n            credentials: 'include',\n            body: form\n        }).then(response).then(tableInit).catch(() => undefined);\n\n    });\n\n});"]}