{"version":3,"sources":["map.jsx"],"names":["autocomplete","mapInited","componentForm","street_number","id","name","route","locality","administrative_area_level_1","country","postal_code","initAutocomplete","google","maps","places","SearchBox","document","getElementById","types","addListener","fillInAddress","map","Map","zoom","center","lat","lng","toForm","place","component","value","address_components","service","PlacesService","getDetails","placeId","place_id","status","PlacesServiceStatus","OK","geometry","location","i","length","addressType","doc","getPlaces","initMap","formatted_address","title","coords","marker","Marker","position","draggable","animation","Animation","DROP","event","addDomListener","window","getCenter","trigger","setCenter","loc","geocoder","Geocoder","latlng","LatLng","geocode","results","GeocoderStatus"],"mappings":"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","file":"map.js","sourcesContent":["let autocomplete, mapInited = false;\n\nconst componentForm = {\n    street_number: {\n        id: 'streetNumber',\n        name: 'short_name'\n    },\n    route: {\n        id: 'street',\n        name: 'long_name'\n    },\n    locality: {\n        id: 'city',\n        name: 'long_name'\n    },\n    administrative_area_level_1: {\n        id: 'state',\n        name: 'short_name'\n    },\n    country: {\n        id: 'country',\n        name: 'long_name'\n    },\n    postal_code: {\n        id: 'zipCode',\n        name: 'short_name'\n    }\n};\n\nfunction initAutocomplete() {\n\n    autocomplete = new google.maps.places.SearchBox(\n        document.getElementById('autocomplete'),\n        {\n            types: ['geocode']\n        }\n    );\n\n    autocomplete.addListener('places_changed', fillInAddress);\n\n    let map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 15,\n        center: {\n            lat: 45.0392674,\n            lng: 38.987221\n        }\n    });\n\n}\n\nfunction toForm(place) {\n\n    for (let component in componentForm) {\n        document.getElementById(componentForm[component].id).value = '';\n    }\n\n    if (typeof place.address_components === \"undefined\")\n    {\n        let map = new google.maps.Map(document.getElementById(\"map\"));\n        let service = new google.maps.places.PlacesService(map);\n\n        service.getDetails({\n            placeId: place.place_id\n        }, function(place, status) {\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\n\n                const lat = place.geometry.location.lat();\n                const lng = place.geometry.location.lng();\n\n                document.getElementById('latitude').value = lat;\n                document.getElementById('longitude').value = lng;\n\n                toForm(place);\n            }\n        });\n\n        return;\n    }\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (let i = 0; i < place.address_components.length; i++) {\n        let addressType = place.address_components[i].types[0];\n        if (typeof componentForm[addressType] !== \"undefined\") {\n            let doc = document.getElementById(componentForm[addressType].id);\n            doc.value = place.address_components[i][componentForm[addressType].name];\n        }\n    }\n\n}\n\nfunction fillInAddress() {\n    'use strict';\n    let place = autocomplete.getPlaces()[0];\n\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n\n    document.getElementById('latitude').value = lat;\n    document.getElementById('longitude').value = lng;\n\n    toForm(place);\n\n    initMap(lat, lng, place.formatted_address);\n}\n\nfunction initMap(lat, lng, title) {\n\n    'use strict';\n\n    let coords = {\n        lat: lat,\n        lng: lng\n    };\n\n    let map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 15,\n        center: coords\n    });\n\n    let marker = new google.maps.Marker({\n        position: coords,\n        draggable: true,\n        animation: google.maps.Animation.DROP,\n        map: map,\n        title: title\n    });\n\n    google.maps.event.addDomListener(window, \"resize\", function () {\n        let center = map.getCenter();\n        google.maps.event.trigger(map, \"resize\");\n        map.setCenter(center);\n    });\n\n    google.maps.event.addListener(marker, 'dragend', function () {\n\n        document.getElementById('latitude').value = marker.position.lat();\n        document.getElementById('longitude').value = marker.position.lng();\n\n        const loc = {\n            lat: marker.position.lat(),\n            lng: marker.position.lng()\n        };\n\n        let geocoder = new google.maps.Geocoder();\n        let latlng = new google.maps.LatLng(loc.lat, loc.lng);\n\n        geocoder.geocode({'latLng': latlng}, function (results, status) {\n            if (status == google.maps.GeocoderStatus.OK) {\n                toForm(results[0]);\n            }\n        });\n\n    });\n\n    mapInited = true;\n\n}"]}