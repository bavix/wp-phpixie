{"version":3,"sources":["lg-trash.jsx"],"names":["root","factory","define","amd","exports","module","$","window","document","undefined","defaults","trash","Trash","element","core","data","$el","s","extend","init","prototype","button","$outer","find","append","_this","on","$current","$items","eq","index","fetch","attr","method","credentials","then","response","status","json","console","log","error","Error","statusText","remove","swal","catch","res","destroy","fn","lightGallery","modules","jQuery"],"mappings":"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","file":"lg-trash.js","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module unless amdModuleId is set\n        define([], function () {\n            return (factory());\n        });\n    }\n    else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    }\n    else {\n        factory();\n    }\n}(this, function () {\n\n    (function ($, window, document, undefined) {\n\n        'use strict';\n\n        let defaults = {\n            trash: true\n        };\n\n        let Trash = function (element) {\n\n            // get lightGallery core plugin data\n            this.core = $(element).data('lightGallery');\n\n            this.$el = $(element);\n\n            // extend module defalut settings with lightGallery core settings\n            this.core.s = $.extend({}, defaults, this.core.s);\n\n            this.init();\n\n            return this;\n        };\n\n        Trash.prototype.init = function () {\n            if (this.core.s.trash) {\n                let button = '<span class=\"lg-trash lg-icon\"><i class=\"fa fa-trash\"></i></span>';\n                this.core.$outer.find('.lg-toolbar').append(button);\n                this.trash();\n            }\n        };\n\n        Trash.prototype.trash = function () {\n            let _this = this;\n            this.core.$outer.find('.lg-trash').on('click.lg', function () {\n\n                let $current = _this.core.$items.eq(_this.core.index);\n\n                fetch('/api' + $current.attr('data-trash'), {\n                    method: 'DELETE',\n                    credentials: 'include'\n                }).then(function (response) {\n\n                    if (response.status == 200) {\n                        return response.json();\n                    }\n\n                    console.log(response.status);\n\n                    if (response.status != 204) {\n                        let error = new Error(response.statusText);\n                        error.response = response;\n                        throw error;\n                    }\n\n                    return [];\n\n                }).then(function (json) {\n                    $current.remove();\n                    swal(\n                        'Deleted!',\n                        'Your file has been deleted.',\n                        'success'\n                    );\n                }).catch(function (res) {\n                    swal(\n                        'Deleted!',\n                        'Your file has not been deleted.',\n                        'error'\n                    );\n                });\n\n            });\n        };\n\n        Trash.prototype.destroy = function () {\n            this.core.$outer.find('.lg-trash').remove();\n        };\n\n        $.fn.lightGallery.modules.trash = Trash;\n\n    })(jQuery, window, document);\n\n}));"]}