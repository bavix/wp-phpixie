{"version":3,"sources":["infinityScroll.jsx"],"names":["Object","prototype","defaultValue","defObject","keys","key","hasOwnProperty","item","object","undefined","InfinityScroll","options","window","document","hasPageYOffset","pageYOffset","scrollTop","documentElement","body","parentNode","top","documentHeight","html","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","scrollPercent","maxTop","jQuery","fn","hasScrollBar","get","height","infinityScroll","callback","scrollObject","percent","bind","scroll"],"mappings":"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","file":"infinityScroll.js","sourcesContent":["// https://jsfiddle.net/69z2wepo/14377/\r\n\r\nObject.prototype.defaultValue = function (defObject) {\r\n    for (let key of Object.keys(defObject)) {\r\n        if (!this.hasOwnProperty(key)) {\r\n            this[key] = defObject[item];\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nfunction defaultValue(object, defObject) {\r\n    if (object === undefined) {\r\n        return defObject;\r\n    }\r\n\r\n    return object.defaultValue(defObject);\r\n}\r\n\r\n/**\r\n * @param {*} options\r\n * @returns {InfinityScroll}\r\n * @constructor\r\n */\r\nconst InfinityScroll = function (options) {\r\n\r\n    options = defaultValue(options, {\r\n        window: window,\r\n        document: window.document\r\n    });\r\n\r\n    this.window = options.window;\r\n    this.document = options.document;\r\n\r\n    this.hasPageYOffset = () => typeof this.window.pageYOffset !== \"undefined\";\r\n    this.pageYOffset = () => this.window.pageYOffset;\r\n    this.scrollTop = () => (this.document.documentElement || this.document.body.parentNode || this.document.body).scrollTop;\r\n\r\n    this.top = () => ( this.hasPageYOffset() ? this.pageYOffset() : this.scrollTop() );\r\n\r\n    this.documentHeight = function () {\r\n        const body = this.document.body;\r\n        const html = this.document.documentElement;\r\n\r\n        return Math.max(\r\n            body.scrollHeight, body.offsetHeight,\r\n            html.clientHeight, html.scrollHeight, html.offsetHeight\r\n        );\r\n    };\r\n\r\n    this.innerHeight = () => this.window.innerHeight;\r\n    this.scrollPercent = () => this.top() / this.maxTop();\r\n    this.maxTop = () => this.documentHeight() - this.innerHeight();\r\n\r\n    return this;\r\n\r\n};\r\n\r\njQuery.fn.hasScrollBar = function () {\r\n    return this.get(0).scrollHeight > this.height();\r\n};\r\n\r\n/**\r\n * @param callback callback\r\n * @param {*} options\r\n */\r\njQuery.fn.infinityScroll = function (callback, options) {\r\n\r\n    const scrollObject = new InfinityScroll(options);\r\n\r\n    options = defaultValue(options, {\r\n        percent: 0.99\r\n    });\r\n\r\n    const percent = options.percent;\r\n\r\n    callback.bind(this);\r\n\r\n    if (!this.hasScrollBar()) {\r\n        callback(scrollObject);\r\n    }\r\n\r\n    this.scroll(() => {\r\n        if (scrollObject.scrollPercent() > percent)\r\n            callback(scrollObject);\r\n    });\r\n\r\n    return this;\r\n\r\n};"]}