{"version":3,"sources":["infinityScroll.jsx"],"names":["Object","prototype","defaultValue","defObject","keys","key","hasOwnProperty","item","object","undefined","InfinityScroll","options","window","document","pageYOffset","documentElement","body","parentNode","scrollTop","hasPageYOffset","html","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","top","maxTop","documentHeight","jQuery","fn","hasScrollBar","get","height","infinityScroll","callback","scrollObject","percent","bind","scroll","scrollPercent"],"mappings":";;;;;;AAAA;;AAEAA,OAAOC,SAAP,CAAiBC,YAAjB,GAAgC,UAAUC,SAAV,EAAqB;AAAA;AAAA;AAAA;;AAAA;AACjD,6BAAgBH,OAAOI,IAAP,CAAYD,SAAZ,CAAhB,8HAAwC;AAAA,gBAA/BE,GAA+B;;AACpC,gBAAI,CAAC,KAAKC,cAAL,CAAoBD,GAApB,CAAL,EAA+B;AAC3B,qBAAKA,GAAL,IAAYF,UAAUI,IAAV,CAAZ;AACH;AACJ;AALgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOjD,WAAO,IAAP;AACH,CARD;;AAUA,SAASL,YAAT,CAAsBM,MAAtB,EAA8BL,SAA9B,EAAyC;AACrC,QAAIK,WAAWC,SAAf,EAA0B;AACtB,eAAON,SAAP;AACH;;AAED,WAAOK,OAAON,YAAP,CAAoBC,SAApB,CAAP;AACH;;AAED;;;;;;IAMMO,c;AAEF,4BAAYC,OAAZ,EAAqB;AAAA;;AAEjBA,kBAAUT,aAAaS,OAAb,EAAsB;AAC5BC,oBAAQA,MADoB;AAE5BC,sBAAUD,OAAOC;AAFW,SAAtB,CAAV;;AAKA,aAAKD,MAAL,GAAcD,QAAQC,MAAtB;AACA,aAAKC,QAAL,GAAgBF,QAAQE,QAAxB;AAEH;;;;yCAEgB;AACb,mBAAO,OAAO,KAAKD,MAAL,CAAYE,WAAnB,KAAmC,WAA1C;AACH;;;sCAEa;AACV,mBAAO,KAAKF,MAAL,CAAYE,WAAnB;AACH;;;oCAEW;AACR,mBAAO,CAAC,KAAKD,QAAL,CAAcE,eAAd,IAAiC,KAAKF,QAAL,CAAcG,IAAd,CAAmBC,UAApD,IAAkE,KAAKJ,QAAL,CAAcG,IAAjF,EAAuFE,SAA9F;AACH;;;8BAEK;AACF,mBAAS,KAAKC,cAAL,KAAwB,KAAKL,WAAL,EAAxB,GAA6C,KAAKI,SAAL,EAAtD;AACH;;;yCAEgB;AACb,gBAAMF,OAAO,KAAKH,QAAL,CAAcG,IAA3B;AACA,gBAAMI,OAAO,KAAKP,QAAL,CAAcE,eAA3B;;AAEA,mBAAOM,KAAKC,GAAL,CACHN,KAAKO,YADF,EACgBP,KAAKQ,YADrB,EAEHJ,KAAKK,YAFF,EAEgBL,KAAKG,YAFrB,EAEmCH,KAAKI,YAFxC,CAAP;AAIH;;;sCAEa;AACV,mBAAO,KAAKZ,MAAL,CAAYc,WAAnB;AACH;;;wCAEe;AACZ,mBAAO,KAAKC,GAAL,KAAa,KAAKC,MAAL,EAApB;AACH;;;iCAEQ;AACL,mBAAO,KAAKC,cAAL,KAAwB,KAAKH,WAAL,EAA/B;AACH;;;;;;AAILI,OAAOC,EAAP,CAAUC,YAAV,GAAyB,YAAY;AACjC,WAAO,KAAKC,GAAL,CAAS,CAAT,EAAYV,YAAZ,GAA2B,KAAKW,MAAL,EAAlC;AACH,CAFD;;AAIA;;;;AAIAJ,OAAOC,EAAP,CAAUI,cAAV,GAA2B,UAAUC,QAAV,EAAoBzB,OAApB,EAA6B;;AAEpD,QAAM0B,eAAe,IAAI3B,cAAJ,CAAmBC,OAAnB,CAArB;;AAEAA,cAAUT,aAAaS,OAAb,EAAsB;AAC5B2B,iBAAS;AADmB,KAAtB,CAAV;;AAIA,QAAMA,UAAU3B,QAAQ2B,OAAxB;;AAEAF,aAASG,IAAT,CAAc,IAAd;;AAEA,QAAI,CAAC,KAAKP,YAAL,EAAL,EAA0B;AACtBI,iBAASC,YAAT;AACH;;AAED,SAAKG,MAAL,CAAY,YAAM;AACd,YAAIH,aAAaI,aAAb,KAA+BH,OAAnC,EACIF,SAASC,YAAT;AACP,KAHD;;AAKA,WAAO,IAAP;AAEH,CAvBD","file":"infinityScroll.js","sourcesContent":["// https://jsfiddle.net/69z2wepo/14377/\r\n\r\nObject.prototype.defaultValue = function (defObject) {\r\n    for (let key of Object.keys(defObject)) {\r\n        if (!this.hasOwnProperty(key)) {\r\n            this[key] = defObject[item];\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nfunction defaultValue(object, defObject) {\r\n    if (object === undefined) {\r\n        return defObject;\r\n    }\r\n\r\n    return object.defaultValue(defObject);\r\n}\r\n\r\n/**\r\n * @param {*} options\r\n * @returns {InfinityScroll}\r\n * @constructor\r\n */\r\n\r\nclass InfinityScroll {\r\n\r\n    constructor(options) {\r\n\r\n        options = defaultValue(options, {\r\n            window: window,\r\n            document: window.document\r\n        });\r\n\r\n        this.window = options.window;\r\n        this.document = options.document;\r\n\r\n    }\r\n\r\n    hasPageYOffset() {\r\n        return typeof this.window.pageYOffset !== \"undefined\";\r\n    }\r\n\r\n    pageYOffset() {\r\n        return this.window.pageYOffset;\r\n    }\r\n\r\n    scrollTop() {\r\n        return (this.document.documentElement || this.document.body.parentNode || this.document.body).scrollTop;\r\n    }\r\n\r\n    top() {\r\n        return ( this.hasPageYOffset() ? this.pageYOffset() : this.scrollTop() );\r\n    }\r\n\r\n    documentHeight() {\r\n        const body = this.document.body;\r\n        const html = this.document.documentElement;\r\n\r\n        return Math.max(\r\n            body.scrollHeight, body.offsetHeight,\r\n            html.clientHeight, html.scrollHeight, html.offsetHeight\r\n        );\r\n    };\r\n\r\n    innerHeight() {\r\n        return this.window.innerHeight;\r\n    }\r\n\r\n    scrollPercent() {\r\n        return this.top() / this.maxTop();\r\n    }\r\n\r\n    maxTop() {\r\n        return this.documentHeight() - this.innerHeight();\r\n    }\r\n\r\n}\r\n\r\njQuery.fn.hasScrollBar = function () {\r\n    return this.get(0).scrollHeight > this.height();\r\n};\r\n\r\n/**\r\n * @param callback callback\r\n * @param {*} options\r\n */\r\njQuery.fn.infinityScroll = function (callback, options) {\r\n\r\n    const scrollObject = new InfinityScroll(options);\r\n\r\n    options = defaultValue(options, {\r\n        percent: 0.99\r\n    });\r\n\r\n    const percent = options.percent;\r\n\r\n    callback.bind(this);\r\n\r\n    if (!this.hasScrollBar()) {\r\n        callback(scrollObject);\r\n    }\r\n\r\n    this.scroll(() => {\r\n        if (scrollObject.scrollPercent() > percent)\r\n            callback(scrollObject);\r\n    });\r\n\r\n    return this;\r\n\r\n};"]}